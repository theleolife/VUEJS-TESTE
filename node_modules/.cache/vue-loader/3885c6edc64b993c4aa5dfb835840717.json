{"remainingRequest":"/home/eric/gitlab/coding-challenges/frontend/node_modules/vue-loader/lib/index.js??vue-loader-options!/home/eric/gitlab/coding-challenges/frontend/src/components/HelloWorld.vue?vue&type=script&lang=ts&","dependencies":[{"path":"/home/eric/gitlab/coding-challenges/frontend/src/components/HelloWorld.vue","mtime":1601917798832},{"path":"/home/eric/gitlab/coding-challenges/frontend/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/eric/gitlab/coding-challenges/frontend/node_modules/babel-loader/lib/index.js","mtime":499162500000},{"path":"/home/eric/gitlab/coding-challenges/frontend/node_modules/ts-loader/index.js","mtime":499162500000},{"path":"/home/eric/gitlab/coding-challenges/frontend/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/eric/gitlab/coding-challenges/frontend/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:CgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCmltcG9ydCB7IENvbXBvbmVudCwgUHJvcCwgVnVlIH0gZnJvbSAndnVlLXByb3BlcnR5LWRlY29yYXRvcicKCkBDb21wb25lbnQKZXhwb3J0IGRlZmF1bHQgY2xhc3MgSGVsbG9Xb3JsZCBleHRlbmRzIFZ1ZSB7CiAgQFByb3AoKSBwcml2YXRlIG1zZyE6IHN0cmluZzsKCiAgcHVibGljIHZhbHVlcyA9IFsgMSwgMywgMSwgNSwgOCwgNywgOSwgNyBdCgogIHB1YmxpYyBzb3J0KHZhbHVlczogbnVtYmVyW10pIHsKICAgIHJldHVybiBbLi4udmFsdWVzXS5zb3J0KCkKICB9CgogIHB1YmxpYyBwYWxpbmRyb21zOiBzdHJpbmdbXSA9IFtdCn0K"},{"version":3,"sources":["HelloWorld.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAuDA;;AAEA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;;AAEA;AACA","file":"HelloWorld.vue","sourceRoot":"src/components","sourcesContent":["<template>\n  <v-container>\n    <v-row>\n      <v-col cols=\"12\">\n        <h1> :) </h1>\n      </v-col>\n      \n      <v-col cols=\"12\">\n        <h3>Part 1</h3>\n        <p>\n          Write a component <b>Palindrom.vue</b> with a single input field that checks if the input is a palindrom, like:\n        </p>\n        <img src=\"/images/palindrom.png\" />\n      </v-col>\n\n      <v-col cols=\"12\">\n        <h3>Part 2</h3>\n        <p>\n          - Write a component <b>GroupBy.vue</b> that displays the aggregated values returned by <b>getData()</b> located in <b>/api/index.ts</b>, like:\n          <pre>\n            | a | 3 |\n            | b | 2 |\n            | c | 1 |\n          </pre>\n          - How could this be accomplished using SQL: SELECT ...\n        </p>\n      </v-col>\n        \n        <v-col cols=\"12\">\n          <h3>Part 3</h3>\n          <p>\n            Write your own sorting algorithm that takes <b>values: {{ values }}</b> and sorts them:<br>\n            {{ sort(values) }}\n          </p>\n        </v-col>\n        \n        <v-col cols=\"12\">\n          <h3>Part 4</h3>\n          <p>\n            Display a list of palindroms that the user entered in <b>Palindrom.vue:</b><br>\n            {{ palindroms }}\n          </p>\n        </v-col>\n\n        <v-col cols=\"12\">\n        <h3>Part 5</h3>\n        <p>\n          Use <b>jest</b> to test the <b>Palindrom.vue</b> component.\n        </p>\n        </v-col>\n    </v-row>\n  </v-container>\n</template>\n\n<script lang=\"ts\">\nimport { Component, Prop, Vue } from 'vue-property-decorator'\n\n@Component\nexport default class HelloWorld extends Vue {\n  @Prop() private msg!: string;\n\n  public values = [ 1, 3, 1, 5, 8, 7, 9, 7 ]\n\n  public sort(values: number[]) {\n    return [...values].sort()\n  }\n\n  public palindroms: string[] = []\n}\n</script>"]}]}